{"name":"highlights","tagline":"Syntax highlighter","body":"![](https://f.cloud.github.com/assets/671378/2454103/24d89962-aee6-11e3-9dcf-ee2d81ec0373.jpg)\r\n\r\nReads in code, writes out HTML with CSS classes based on the tokens in the code.\r\n\r\n[![Build Status](https://travis-ci.org/atom/highlights.svg?branch=master)](https://travis-ci.org/atom/highlights)\r\n\r\nSee it in action [here](http://atom.github.io/highlights/examples).\r\n\r\n### Installing\r\n\r\n```sh\r\nnpm install highlights\r\n```\r\n\r\n### Using\r\n\r\nRun `highlights -h` for full details about the supported options.\r\n\r\nTo convert a source file to tokenized HTML run the following:\r\n\r\n```sh\r\nhighlights file.coffee -o file.html\r\n```\r\n\r\nNow you have a `file.html` file that has a big `<pre>` tag with a `<div>` for\r\neach line with `<span>` elements for each token.\r\n\r\nThen you can compile an existing Atom theme into a stylesheet with the\r\nfollowing:\r\n\r\n```sh\r\ngit clone https://github.com/atom/atom-dark-syntax\r\ncd atom-dark-syntax\r\nnpm install -g less\r\nlessc --include-path=stylesheets index.less atom-dark-syntax.css\r\n```\r\n\r\nNow you have an `atom-dark-syntax.css` stylesheet that be combined with\r\nthe `file.html` file to generate some nice looking code.\r\n\r\nCheck out the [examples](http://atom.github.io/highlights/examples) to see\r\nit in action.\r\n\r\nCheck out [atom.io](https://atom.io/packages) to find more themes.\r\n\r\nSome popular themes:\r\n  * [atom-dark-syntax](https://github.com/atom/atom-dark-syntax)\r\n  * [atom-light-syntax](https://github.com/atom/atom-light-syntax)\r\n  * [solarized-dark-syntax](https://github.com/atom/solarized-dark-syntax)\r\n  * [solarized-light-syntax](https://github.com/atom/solarized-light-syntax)\r\n\r\n#### Using in code\r\n\r\n```coffee\r\nHighlights = require 'highlights'\r\nhighlighter = new Highlights()\r\nhtml = highlighter.highlightSync\r\n  fileContents: 'var hello = \"world\";'\r\n  scopeName: 'source.js'\r\n\r\nconsole.log html\r\n```\r\n\r\nOutputs:\r\n\r\n```html\r\n<pre class=\"editor editor-colors\">\r\n  <div class=\"line\">\r\n    <span class=\"source js\">\r\n      <span class=\"storage modifier js\"><span>var</span></span>\r\n      <span>&nbsp;hello&nbsp;</span>\r\n      <span class=\"keyword operator js\"><span>=</span></span>\r\n      <span>&nbsp;</span>\r\n      <span class=\"string quoted double js\">\r\n        <span class=\"punctuation definition string begin js\"><span>&quot;</span></span>\r\n        <span>world</span>\r\n        <span class=\"punctuation definition string end js\"><span>&quot;</span></span>\r\n      </span>\r\n      <span class=\"punctuation terminator statement js\"><span>;</span></span>\r\n    </span>\r\n  </div>\r\n</pre>\r\n```\r\n\r\n### Loading Grammars From Modules\r\n\r\nhighlights exposes the method `requireGrammarsSync`, for loading grammars from\r\nnpm modules. The usage is as follows:\r\n\r\n```bash\r\nnpm install atom-language-clojure\r\n```\r\n\r\n```coffee\r\nHighlights = require 'highlights'\r\nhighlighter = new Highlights()\r\nhighlighter.requireGrammarsSync\r\n  modulePath: require.resolve('atom-language-clojure/package.json')\r\n```\r\n\r\n### Developing\r\n\r\n* Clone this repository `git clone https://github.com/atom/highlights`\r\n* Update the submodules by running `git submodule update --init --recursive`\r\n* Run `npm install` to install the dependencies, compile the CoffeeScript, and\r\n  build the grammars\r\n* Run `npm test` to run the specs\r\n\r\n:green_heart: Pull requests are greatly appreciated and welcomed.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}